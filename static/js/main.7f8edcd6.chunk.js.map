{"version":3,"sources":["actions/actions.js","components/FileItem.js","components/styles/Containers.js","components/TableList.js","App.js","reducers/store.js","index.js"],"names":["data","id","name","dentist","xRayPlate","startTreatment","endTreatment","connect","dispatch","deletePatient","type","savePatient","updatedPatient","patient","useEffect","setPatient","setdentist","setXrayPlate","setStartTreatment","setEndTreatment","row","useState","editMode","setEditMode","Table","Row","Cell","value","onChange","event","newValue","target","Button","positive","onClick","Icon","color","ListContainer","styled","div","TableList","props","striped","Header","HeaderCell","Body","patients","map","index","state","getPatientData","initialState","Immutable","store","createStore","action","merge","filterPatients","filter","updatedList","ReactDOM","render","document","getElementById"],"mappings":"gLAAMA,G,OAAO,CAAC,CACVC,GAAI,EACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cACf,CACEL,GAAI,EACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cAEf,CACEL,GAAI,EACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cACf,CACEL,GAAI,EACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cACf,CACEL,GAAI,EACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cACf,CACEL,GAAI,EACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cACf,CACEL,GAAI,EACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cACf,CACEL,GAAI,EACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cACf,CACEL,GAAI,EACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cACf,CACEL,GAAI,GACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cACf,CACEL,GAAI,GACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cACf,CACEL,GAAI,GACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cACf,CACEL,GAAI,GACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cACf,CACEL,GAAI,GACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cACf,CACEL,GAAI,GACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cACf,CACEL,GAAI,GACJC,KAAM,QACNC,QAAS,WACTC,UAAW,EACXC,eAAgB,aAChBC,aAAa,cACf,CACEL,GAAI,GA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","file":"static/js/main.7f8edcd6.chunk.js","sourcesContent":["const data = [{\r\n    id: 1,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 2,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n\r\n},{\r\n    id: 3,\r\n    name: 'name2',\r\n    dentist: 'dentist2',\r\n    xRayPlate: 2,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 4,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 5,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 6,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 7,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 8,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 9,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 10,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 11,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 12,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 13,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 14,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 15,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 16,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 17,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 18,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 19,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n},{\r\n    id: 20,\r\n    name: 'name1',\r\n    dentist: 'dentist1',\r\n    xRayPlate: 3,\r\n    startTreatment: \"2020-04-10\",\r\n    endTreatment:\"2020-05-10\"\r\n}];\r\n\r\n/**\r\n * Get all patients\r\n * @param {function} dispatch \r\n */\r\nconst getPatientData = (dispatch) =>{\r\n    dispatch({\r\n        type: 'SUCCESS_GET_PATIENTS',\r\n        patients: data\r\n    })\r\n};\r\n\r\n/**\r\n * updates updatedPatient in patients list in store\r\n * @param {function} dispatch\r\n * @param {object} updatedPatient\r\n */\r\nconst savePatient = (dispatch, updatedPatient) => {\r\n    dispatch({\r\n        type: 'SUCCESS_SAVE_PATIENT',\r\n        updatedPatient\r\n    });\r\n};\r\n\r\n/**\r\n * Deletes patient with id in store\r\n * @param {function} dispatch \r\n * @param {number} id \r\n */\r\nconst deletePatient = (dispatch, id) =>{\r\n    dispatch({\r\n        type: 'DELETE_PATIENT',\r\n        id: id\r\n    })\r\n};\r\n\r\nexport  {\r\n    getPatientData,\r\n    deletePatient,\r\n    savePatient\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Table, Icon, Button } from 'semantic-ui-react'\r\n\r\nimport {deletePatient, savePatient} from '../actions/actions';\r\n\r\n/**\r\n * File item, each row with its values\r\n * @param {object} props\r\n */\r\nconst FileItem = ({patient, savePatient, deletePatient}) => {\r\n\r\n    useEffect(() => {\r\n        setPatient(patient.name);\r\n        setdentist(patient.dentist);\r\n        setXrayPlate(patient.xRayPlate);\r\n        setStartTreatment(patient.startTreatment);\r\n        setEndTreatment(patient.endTreatment);\r\n    }, [patient.name, patient.dentist, patient.xRayPlate, patient.startTreatment, patient.endTreatment])\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [name, setPatient] = useState(patient.name);\r\n    const [dentist, setdentist] = useState(patient.dentist);\r\n    const [xRayPlate, setXrayPlate] = useState(patient.xRayPlate);\r\n    const [startTreatment, setStartTreatment] = useState(patient.startTreatment);\r\n    const [endTreatment, setEndTreatment] = useState(patient.endTreatment);\r\n\r\n    /**\r\n     * Deletes patient using patient.id\r\n     */\r\n    const handleRemovePatient = () => deletePatient(patient.id);\r\n\r\n    /**\r\n     * Sets editMode to true\r\n     */\r\n    const handleEditRow = () => setEditMode(true);\r\n\r\n    /**\r\n     * Calls savePatient action with updatedPatient, and set editMode to false\r\n     */\r\n    const handleSaveRow = () => {\r\n        const updatedPatient = {\r\n            name,\r\n            dentist,\r\n            xRayPlate,\r\n            startTreatment,\r\n            endTreatment,\r\n            id: patient.id\r\n        };\r\n        savePatient(updatedPatient);\r\n        setEditMode(false);\r\n    };\r\n\r\n    /**\r\n     * Sets editMode to false\r\n     */\r\n    const handleCancel = () => setEditMode(false);\r\n\r\n    /**\r\n     * Changes pacient value\r\n     * @param {object} event\r\n     */\r\n    const handleChangePatient = (event) => {\r\n        const newValue = event.target.value;\r\n        setPatient(newValue);\r\n    }\r\n\r\n    /**\r\n     * Changes dentist value\r\n     * @param {object} event\r\n     */\r\n    const handleChangedentist = (event) => {\r\n        const newValue = event.target.value;\r\n        setdentist(newValue);\r\n    }\r\n\r\n    /**\r\n     * Changes placa value\r\n     * @param {object} event\r\n     */\r\n    const handleChangexRayPlate = (event) => {\r\n        const newValue = event.target.value;\r\n        setXrayPlate(newValue);\r\n    }\r\n\r\n    /**\r\n     * Changes inicio tratamiento value\r\n     * @param {object} event\r\n     */\r\n    const handleChangeStartTreatment = (event) => {\r\n        const newValue = event.target.value;\r\n        setStartTreatment(newValue);\r\n    }\r\n\r\n    /**\r\n     * Changes fin tratamiento value\r\n     * @param {object} event\r\n     */\r\n    const handleChangeEndTreatment = (event) => {\r\n        const newValue = event.target.value;\r\n        setEndTreatment(newValue);\r\n    }\r\n\r\n    let row;\r\n    if (editMode) {\r\n        row = (\r\n            <Table.Row>\r\n                <Table.Cell><input type=\"text\" value={name} onChange={handleChangePatient} /></Table.Cell>\r\n                <Table.Cell><input type=\"text\" value={dentist} onChange={handleChangedentist} /></Table.Cell>\r\n                <Table.Cell><input type=\"number\" value={xRayPlate} onChange={handleChangexRayPlate}/></Table.Cell>\r\n                <Table.Cell><input type=\"date\" value={startTreatment} onChange={handleChangeStartTreatment}/></Table.Cell>\r\n                <Table.Cell><input type=\"date\" value={endTreatment} onChange={handleChangeEndTreatment}/></Table.Cell>\r\n                <Table.Cell><Button positive onClick={handleSaveRow}>Guardar</Button></Table.Cell>\r\n                <Table.Cell><Button onClick={handleCancel}>Cancelar</Button></Table.Cell>\r\n            </Table.Row>\r\n        );\r\n    } else {\r\n        row = (\r\n            <Table.Row>\r\n                <Table.Cell>{name}</Table.Cell>\r\n                <Table.Cell>{dentist}</Table.Cell>\r\n                <Table.Cell>{xRayPlate}</Table.Cell>\r\n                <Table.Cell>{startTreatment}</Table.Cell>\r\n                <Table.Cell>{endTreatment}</Table.Cell>\r\n                <Table.Cell><Icon color='blue' name='edit' onClick={handleEditRow} /></Table.Cell>\r\n                <Table.Cell><Icon color='red' name='remove circle' onClick={handleRemovePatient}/></Table.Cell>\r\n            </Table.Row>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {row}\r\n        </>\r\n    );\r\n};\r\n\r\nFileItem.propTypes = {\r\n    pacients: PropTypes.object,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deletePatient: (id) => deletePatient(dispatch, id),\r\n    savePatient: (name) => savePatient(dispatch, name)\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(FileItem);\r\n","import styled from 'styled-components';\r\n\r\nexport const ListContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 15px;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nimport FileItem from './FileItem';\r\nimport {ListContainer} from './styles/Containers';\r\n\r\n/**\r\n * Table that shows the first 20 patients\r\n * @param {object} props \r\n */\r\nconst TableList = (props) => {\r\n    return (\r\n        <ListContainer>\r\n            <Table striped>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Paciente</Table.HeaderCell>\r\n                        <Table.HeaderCell>Profesional</Table.HeaderCell>\r\n                        <Table.HeaderCell>Placas</Table.HeaderCell>\r\n                        <Table.HeaderCell>Inicio de Tratamiento</Table.HeaderCell>\r\n                        <Table.HeaderCell>Fin de Tratamiento</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    {\r\n                        props.patients.map((patient, index) => {\r\n                            return <FileItem key={index} patient={patient}/>;\r\n                        })\r\n                    }\r\n                </Table.Body>\r\n            </Table>\r\n        </ListContainer>\r\n    );\r\n};\r\n\r\nTableList.propTypes = {\r\n    patients: PropTypes.array,\r\n};\r\n\r\nexport default TableList","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {getPatientData} from './actions/actions';\r\nimport TableList from './components/TableList';\r\n\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\n/**\r\n * App main view\r\n * @param {object} props \r\n */\r\nconst App = (props) =>{\r\n\r\n    /**\r\n     * call getPatientData action just once\r\n     */\r\n    useEffect(() => {\r\n        props.getPatientData();\r\n    }, []);\r\n\r\n    return (\r\n        <section>\r\n            <TableList patients={props.patients}/>\r\n        </section>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    patients: state.patients,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getPatientData: () => getPatientData(dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {createStore} from 'redux';\r\nimport Immutable from 'seamless-immutable';\r\n\r\n/**\r\n * Initial state\r\n */\r\nconst initialState = Immutable({\r\n    patients: []\r\n});\r\n\r\nconst patientStore = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'SUCCESS_GET_PATIENTS':\r\n            return state.merge({\r\n                patients: action.patients,\r\n            });\r\n        case 'DELETE_PATIENT':\r\n            const id = action.id;\r\n            const filterPatients = state.patients.filter(patient => patient.id !== id);\r\n            return state.merge({\r\n                patients: filterPatients\r\n            });\r\n        case 'SUCCESS_SAVE_PATIENT':\r\n            const updatedPatient = action.updatedPatient;\r\n            const updatedList = state.patients.map(patient => {\r\n                if (patient.id === updatedPatient.id) {\r\n                    return updatedPatient;\r\n                }\r\n                return patient;\r\n            });\r\n            return state.merge({\r\n                patients: updatedList\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst store = createStore(patientStore);\r\n\r\nexport default store;","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './reducers/store'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}